{"version":3,"file":"component---src-templates-blog-template-js-2d0eefcf09727f025509.js","mappings":"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","sources":["webpack://yoonkyoung/./src/components/post-header/index.js","webpack://yoonkyoung/./src/components/post-navigator/index.js","webpack://yoonkyoung/./src/components/post-content/index.js","webpack://yoonkyoung/./src/components/giscus/index.js","webpack://yoonkyoung/./src/templates/blog-template.js"],"sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport './style.scss';\n\nfunction PostHeader({ post }) {\n  return (\n    <header className=\"post-header\">\n      {post.emoji && <div className=\"emoji\">{post.emoji}</div>}\n      <div className=\"info\">\n        <div className=\"categories\">\n          {post.categories.map((category) => (\n            <Link className=\"category\" key={category} to={`/posts/${category}`}>\n              {category}\n            </Link>\n          ))}\n        </div>\n      </div>\n\n      <h1 className=\"title\">{post.title}</h1>\n      <div className=\"info\">\n        <div className=\"author\">\n          posted by <strong>{post.author}</strong>,\n        </div>{' '}\n        {post.date}\n      </div>\n    </header>\n  );\n}\nexport default PostHeader;\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport './style.scss';\n\nfunction PostNavigator({ prevPost, nextPost }) {\n  return (\n    <div className=\"post-navigator\">\n      <div className=\"post-navigator-card-wrapper\">\n        {nextPost && (\n          <Link className=\"post-card prev\" key={nextPost.id} to={nextPost.slug}>\n            <div className=\"direction\">이전 글</div>\n            <div className=\"title\">{nextPost.title}</div>\n          </Link>\n        )}\n      </div>\n      <div className=\"post-navigator-card-wrapper\">\n        {prevPost && (\n          <Link className=\"post-card next\" key={prevPost.id} to={prevPost.slug}>\n            <div className=\"direction\">다음 글</div>\n            <div className=\"title\">{prevPost.title}</div>\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PostNavigator;\n","import React from 'react';\nimport './style.scss';\n\nfunction PostContent({ html }) {\n  return (\n    <div className=\"post-content\">\n      <div className=\"markdown\" dangerouslySetInnerHTML={{ __html: html }} />\n    </div>\n  );\n}\n\nexport default PostContent;\n","import React, { createRef, useEffect, useRef } from 'react';\n\nconst src = 'https://giscus.app/client.js';\n\nfunction Giscus({ repo, repoId, categoryId, path }) {\n  const rootElm = createRef();\n  const isGiscusLoaded = useRef(false);\n\n  useEffect(() => {\n    if (!rootElm.current || isGiscusLoaded.current) return;\n    const storedIsDarkMode = localStorage.getItem('isDarkMode');\n\n    const giscus = document.createElement('script');\n    const giscusConfig = {\n      src,\n      'data-repo': repo,\n      'data-repo-id': repoId,\n      'data-category': 'Comments',\n      'data-category-id': categoryId,\n      'data-mapping': 'pathname',\n      'data-strict': '0',\n      'data-reactions-enabled': '1',\n      'data-emit-metadata': '0',\n      'data-input-position': 'bottom',\n      'data-theme': JSON.parse(storedIsDarkMode) ? 'dark' : 'light',\n      'data-lang': 'ko',\n      crossorigin: 'anonymous',\n      async: true,\n    };\n\n    Object.keys(giscusConfig).forEach((configKey) => {\n      giscus.setAttribute(configKey, giscusConfig[configKey]);\n    });\n    rootElm.current.appendChild(giscus);\n    isGiscusLoaded.current = true;\n  }, [repo, repoId, categoryId, rootElm, path]);\n\n  return <div className=\"giscus\" ref={rootElm} />;\n}\n\nexport default Giscus;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../layout';\nimport Seo from '../components/seo';\nimport PostHeader from '../components/post-header';\nimport PostNavigator from '../components/post-navigator';\nimport Post from '../models/post';\nimport PostContent from '../components/post-content';\nimport Giscus from '../components/giscus';\n\nfunction BlogTemplate({ data }) {\n  const curPost = new Post(data.cur);\n  const prevPost = data.prev && new Post(data.prev);\n  const nextPost = data.next && new Post(data.next);\n  const { comments } = data.site?.siteMetadata;\n  const giscusRepo = comments?.giscus?.repo;\n  const giscusRepoId = comments?.giscus?.repoId;\n  const giscusCategoryId = comments?.giscus?.categoryId;\n\n  return (\n    <Layout>\n      <Seo title={curPost?.title} description={curPost?.excerpt} />\n      <PostHeader post={curPost} />\n      <PostContent html={curPost.html} />\n      <PostNavigator prevPost={prevPost} nextPost={nextPost} />\n      {giscusRepo && giscusRepoId && giscusCategoryId && (\n        <Giscus\n          repo={giscusRepo}\n          repoId={giscusRepoId}\n          categoryId={giscusCategoryId}\n          path={curPost.slug}\n        />\n      )}\n    </Layout>\n  );\n}\n\nexport default BlogTemplate;\n\nexport const pageQuery = graphql`\n  query($slug: String, $nextSlug: String, $prevSlug: String) {\n    cur: markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      excerpt(pruneLength: 500, truncate: true)\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji\n      }\n      fields {\n        slug\n      }\n    }\n\n    next: markdownRemark(fields: { slug: { eq: $nextSlug } }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji\n      }\n      fields {\n        slug\n      }\n    }\n\n    prev: markdownRemark(fields: { slug: { eq: $prevSlug } }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji\n      }\n      fields {\n        slug\n      }\n    }\n\n    site {\n      siteMetadata {\n        siteUrl\n        comments {\n          giscus {\n            repo\n            repoId\n            categoryId\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","post","React","className","emoji","categories","map","category","Link","key","to","title","author","date","prevPost","nextPost","id","slug","html","dangerouslySetInnerHTML","__html","repo","repoId","categoryId","path","rootElm","createRef","isGiscusLoaded","useRef","useEffect","current","storedIsDarkMode","localStorage","getItem","giscus","document","createElement","giscusConfig","src","JSON","parse","crossorigin","async","Object","keys","forEach","configKey","setAttribute","appendChild","ref","_data$site","_comments$giscus","_comments$giscus2","_comments$giscus3","data","curPost","Post","cur","prev","next","comments","site","siteMetadata","giscusRepo","giscusRepoId","giscusCategoryId","Layout","Seo","description","excerpt","PostHeader","PostContent","PostNavigator","Giscus"],"sourceRoot":""}