{"version":3,"file":"component---src-templates-blog-template-js-34b2b6ca59ee04f3d3e8.js","mappings":"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","sources":["webpack://yoonkyoung/./src/components/post-header/index.js","webpack://yoonkyoung/./src/components/post-navigator/index.js","webpack://yoonkyoung/./src/components/post-content/index.js","webpack://yoonkyoung/./src/components/giscus/index.js","webpack://yoonkyoung/./src/templates/blog-template.js"],"sourcesContent":["import { Link } from 'gatsby';\nimport React from 'react';\nimport './style.scss';\n\nfunction PostHeader({ post }) {\n  return (\n    <header className=\"post-header\">\n      {post.emoji && <div className=\"emoji\">{post.emoji}</div>}\n      <div className=\"info\">\n        <div className=\"categories\">\n          {post.categories.map((category) => (\n            <Link className=\"category\" key={category} to={`/posts/${category}`}>\n              {category}\n            </Link>\n          ))}\n        </div>\n      </div>\n\n      <h1 className=\"title\">{post.title}</h1>\n      <div className=\"info\">\n        <div className=\"author\">\n          posted by <strong>{post.author}</strong>,\n        </div>{' '}\n        {post.date}\n      </div>\n    </header>\n  );\n}\nexport default PostHeader;\n","import { Link } from 'gatsby';\nimport React from 'react';\nimport './style.scss';\n\nfunction PostNavigator({ prevPost, nextPost }) {\n  return (\n    <div className=\"post-navigator\">\n      <div className=\"post-navigator-card-wrapper\">\n        {nextPost && (\n          <Link className=\"post-card prev\" key={nextPost.id} to={nextPost.slug}>\n            <div className=\"direction\">이전 글</div>\n            <div className=\"title\">{nextPost.title}</div>\n          </Link>\n        )}\n      </div>\n      <div className=\"post-navigator-card-wrapper\">\n        {prevPost && (\n          <Link className=\"post-card next\" key={prevPost.id} to={prevPost.slug}>\n            <div className=\"direction\">다음 글</div>\n            <div className=\"title\">{prevPost.title}</div>\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default PostNavigator;\n","import React from 'react';\nimport './style.scss';\n\nfunction PostContent({ html }) {\n  return (\n    <div className=\"post-content\">\n      <div className=\"markdown\" dangerouslySetInnerHTML={{ __html: html }} />\n    </div>\n  );\n}\n\nexport default PostContent;\n","import React, { useEffect, useRef } from 'react';\n\nconst GISCUS_SRC = 'https://giscus.app/client.js';\n\nconst Giscus = ({ repoConfig, path }) => {\n  const giscusRef = useRef(null);\n\n  useEffect(() => {\n    if (giscusRef.current && !giscusRef.current.firstChild) {\n      const giscus = document.createElement('script');\n      const isDarkMode = JSON.parse(localStorage.getItem('isDarkMode'));\n\n      giscus.src = GISCUS_SRC;\n      giscus.setAttribute('data-repo', repoConfig.repo);\n      giscus.setAttribute('data-repo-id', repoConfig.repoId);\n      giscus.setAttribute('data-category', repoConfig.category);\n      giscus.setAttribute('data-category-id', repoConfig.categoryId);\n      giscus.setAttribute('data-mapping', 'og:title');\n      giscus.setAttribute('data-reactions-enabled', '1');\n      giscus.setAttribute('data-emit-metadata', '0');\n      giscus.setAttribute('data-theme', isDarkMode ? 'dark' : 'light');\n      giscus.setAttribute('data-lang', 'ko');\n      giscus.crossOrigin = 'anonymous';\n      giscus.async = true;\n\n      giscusRef.current.appendChild(giscus);\n    }\n  }, [path, repoConfig]);\n\n  return <div className=\"giscus\" ref={giscusRef} />;\n};\n\nexport default Giscus;\n","import React from 'react';\nimport { graphql } from 'gatsby';\nimport Layout from '../layout';\nimport Seo from '../components/seo';\nimport PostHeader from '../components/post-header';\nimport PostNavigator from '../components/post-navigator';\nimport Post from '../models/post';\nimport PostContent from '../components/post-content';\nimport Giscus from '../components/giscus';\n\nfunction BlogTemplate({ data }) {\n  const curPost = new Post(data.cur);\n  const prevPost = data.prev && new Post(data.prev);\n  const nextPost = data.next && new Post(data.next);\n  const { comments } = data.site?.siteMetadata;\n\n  return (\n    <Layout>\n      <Seo title={curPost?.title} description={curPost?.excerpt} />\n      <PostHeader post={curPost} />\n      <PostContent html={curPost.html} />\n      <PostNavigator prevPost={prevPost} nextPost={nextPost} />\n      <Giscus repoConfig={comments} path={curPost.slug} />\n    </Layout>\n  );\n}\n\nexport default BlogTemplate;\n\nexport const pageQuery = graphql`\n  query($slug: String, $nextSlug: String, $prevSlug: String) {\n    cur: markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      html\n      excerpt(pruneLength: 500, truncate: true)\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji\n      }\n      fields {\n        slug\n      }\n    }\n\n    next: markdownRemark(fields: { slug: { eq: $nextSlug } }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji\n      }\n      fields {\n        slug\n      }\n    }\n\n    prev: markdownRemark(fields: { slug: { eq: $prevSlug } }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        categories\n        author\n        emoji\n      }\n      fields {\n        slug\n      }\n    }\n\n    site {\n      siteMetadata {\n        siteUrl\n        comments {\n          giscus {\n            repo\n            repoId\n            category\n            categoryId\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["_ref","post","React","className","emoji","categories","map","category","Link","key","to","title","author","date","prevPost","nextPost","id","slug","html","dangerouslySetInnerHTML","__html","repoConfig","path","giscusRef","useRef","useEffect","current","firstChild","giscus","document","createElement","isDarkMode","JSON","parse","localStorage","getItem","src","setAttribute","repo","repoId","categoryId","crossOrigin","async","appendChild","ref","_data$site","data","curPost","Post","cur","prev","next","comments","site","siteMetadata","Layout","Seo","description","excerpt","PostHeader","PostContent","PostNavigator","Giscus"],"sourceRoot":""}